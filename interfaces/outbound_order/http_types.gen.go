// Package interfaces provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package interfaces

const (
	Jwt_header_AuthorizationScopes = "jwt_header_Authorization.Scopes"
)

// Defines values for AddressCertificateType.
const (
	AddressCertificateTypeID AddressCertificateType = "ID"

	AddressCertificateTypePP AddressCertificateType = "PP"
)

// Defines values for CreateOmsOutboundOrderRequestBodyMode.
const (
	CreateOmsOutboundOrderRequestBodyModeN1 CreateOmsOutboundOrderRequestBodyMode = 1

	CreateOmsOutboundOrderRequestBodyModeN2 CreateOmsOutboundOrderRequestBodyMode = 2

	CreateOmsOutboundOrderRequestBodyModeN3 CreateOmsOutboundOrderRequestBodyMode = 3
)

// Defines values for ListItemChannelType.
const (
	ListItemChannelTypeN1 ListItemChannelType = 1

	ListItemChannelTypeN2 ListItemChannelType = 2

	ListItemChannelTypeN3 ListItemChannelType = 3
)

// Defines values for ShippingAddressCertificateType.
const (
	ShippingAddressCertificateTypeID ShippingAddressCertificateType = "ID"

	ShippingAddressCertificateTypePP ShippingAddressCertificateType = "PP"
)

// Defines values for UpdateResponseDataStatus.
const (
	UpdateResponseDataStatusN0 UpdateResponseDataStatus = 0

	UpdateResponseDataStatusN1 UpdateResponseDataStatus = 1
)

// Address
type Address struct {
	// Address Line 1
	Address1 *string `json:"address1,omitempty"`

	// Address Line 2
	Address2 *string `json:"address2,omitempty"`

	// certificate code
	CertificateCode *string `json:"certificate_code,omitempty"`

	// certificate period
	CertificatePeriod *string `json:"certificate_period,omitempty"`

	// certificate type
	CertificateType *AddressCertificateType `json:"certificate_type,omitempty"`

	// City Name
	CityName *string `json:"city_name,omitempty"`

	// company
	Company *string `json:"company,omitempty"`

	// Country code
	CountryCode *string `json:"country_code,omitempty"`

	// Country Name
	CountryName *string `json:"country_name,omitempty"`

	// email
	Email *string `json:"email,omitempty"`

	// First name
	FirstName *string `json:"first_name,omitempty"`

	// Last name
	LastName *string `json:"last_name,omitempty"`

	// name
	Name *string `json:"name,omitempty"`

	// Phone number
	PhoneNumber *string `json:"phone_number,omitempty"`

	// State code
	StateCode *string `json:"state_code,omitempty"`

	// State Name
	StateName *string `json:"state_name,omitempty"`

	// ZIP code
	ZipCode *string `json:"zip_code,omitempty"`
}

// certificate type
type AddressCertificateType string

// BackToReadyOutboundOrderRequestBody defines model for BackToReadyOutboundOrderRequestBody.
type BackToReadyOutboundOrderRequestBody struct {
	Orders []OmsOrderRspData `json:"orders"`
}

// BaseResponse defines model for BaseResponse.
type BaseResponse struct {
	// code
	Code int64 `json:"code"`

	// message
	Message string `json:"message"`
}

// BatchOmsUpdateOutboundOrderRequestBody defines model for BatchOmsUpdateOutboundOrderRequestBody.
type BatchOmsUpdateOutboundOrderRequestBody struct {
	// Update Order Data
	Orders []OmsOutboundOrderUpdateRequest `json:"orders"`
}

// BatchOrderResponse defines model for BatchOrderResponse.
type BatchOrderResponse struct {
	// code
	Code int64 `json:"code"`

	// Data
	Data *[]SingleOrderResponse `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// Channel Option
type ChannelOption struct {
	// Channel Name
	ChannelName *string `json:"channel_name,omitempty"`

	// Channel Type Name
	ChannelTypeName *string `json:"channel_type_name,omitempty"`

	// Charge Weight
	ChargeWeight *int64 `json:"charge_weight,omitempty"`

	// Fuel Fee
	FuelFee *float64 `json:"fuel_fee,omitempty"`

	// Channel Cost Id
	Id *int64 `json:"id,omitempty"`

	// Max Normal Days
	MaxNormalDays *int64 `json:"max_normal_days,omitempty"`

	// Min Normal Days
	MinNormalDays *int64 `json:"min_normal_days,omitempty"`

	// Misc Fee
	MiscFee *float64 `json:"misc_fee,omitempty"`

	// Processing Fee
	ProcessingFee *float64 `json:"processing_fee,omitempty"`

	// Registration Fee
	RegistrationFee *float64 `json:"registration_fee,omitempty"`

	// Shipping Cost
	ShippingCost *float64 `json:"shipping_cost,omitempty"`

	// Total Fee
	TotalFee *float64 `json:"total_fee,omitempty"`

	// Vat
	Vat *float64 `json:"vat,omitempty"`
}

// CreateOmsOutboundOrderRequestBody defines model for CreateOmsOutboundOrderRequestBody.
type CreateOmsOutboundOrderRequestBody struct {
	// order items
	Items []OmsOrderItemCreateRequest `json:"items"`

	// delivery mode(1 direct，2 warehouse, 3 platform)
	Mode CreateOmsOutboundOrderRequestBodyMode `json:"mode"`

	// offline
	Offline bool `json:"offline"`

	// ShippingAddress describes the receiver address
	ReceiverInfo ShippingAddress `json:"receiver_info"`

	// remark
	Remark *string `json:"remark,omitempty"`

	// warehouse
	WarehouseId int64 `json:"warehouse_id"`
}

// delivery mode(1 direct，2 warehouse, 3 platform)
type CreateOmsOutboundOrderRequestBodyMode int

// CreateOutboundOrderItemRequestBody defines model for CreateOutboundOrderItemRequestBody.
type CreateOutboundOrderItemRequestBody struct {
	// 产品barcode
	Barcode *string `json:"barcode,omitempty"`

	// customer code
	CustomerCode *string `json:"customer_code,omitempty"`

	// declared cn name
	DeclaredCnName *string `json:"declared_cn_name,omitempty"`

	// declared en name
	DeclaredEnName *string `json:"declared_en_name,omitempty"`

	// declared value in eur
	DeclaredValueInEur *float32 `json:"declared_value_in_eur,omitempty"`

	// declared value in usd
	DeclaredValueInUsd *float32 `json:"declared_value_in_usd,omitempty"`

	// ext order item id
	ExtOrderItemId *string `json:"ext_order_item_id,omitempty"`

	// hs code
	HsCode *string `json:"hs_code,omitempty"`

	// images
	Images *[]string `json:"images,omitempty"`

	// material
	Material *string `json:"material,omitempty"`

	// order number
	OrderNumber string `json:"order_number"`

	// product attributes
	ProductAttributes *[]string `json:"product_attributes,omitempty"`

	// height
	ProductHeight *float64 `json:"product_height,omitempty"`

	// length
	ProductLength *float64 `json:"product_length,omitempty"`

	// product name
	ProductName *string `json:"product_name,omitempty"`

	// product price
	ProductPrice *float64 `json:"product_price,omitempty"`

	// product SKU
	ProductSku *string `json:"product_sku,omitempty"`

	// claim weight
	ProductWeight *float64 `json:"product_weight,omitempty"`

	// width
	ProductWidth *float64 `json:"product_width,omitempty"`

	// purpose
	Purpose *string `json:"purpose,omitempty"`

	// 产品数量
	Qty *int64 `json:"qty,omitempty"`

	// requires shipping
	RequiresShipping *bool `json:"requires_shipping,omitempty"`
}

// Error defines model for Error.
type Error struct {
	// Is the error a server-side fault?
	Fault bool `json:"fault"`

	// ID is a unique identifier for this particular occurrence of the problem.
	Id string `json:"id"`

	// Message is a human-readable explanation specific to this occurrence of the problem.
	Message string `json:"message"`

	// Name is the name of this class of errors.
	Name string `json:"name"`

	// Is the error temporary?
	Temporary bool `json:"temporary"`

	// Is the error a timeout?
	Timeout bool `json:"timeout"`
}

// GetOrderListData defines model for GetOrderListData.
type GetOrderListData struct {
	// List
	List *[]ListItem `json:"list,omitempty"`

	// MetaData describes the MetaData
	Meta *MetaData `json:"meta,omitempty"`
}

// GetOrderListResult defines model for GetOrderListResult.
type GetOrderListResult struct {
	// code
	Code int64             `json:"code"`
	Data *GetOrderListData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// Hold Reason
type HoldReason struct {
	// Hold Reason
	Reason *string `json:"reason,omitempty"`

	// Hold Reason Type
	Type *string `json:"type,omitempty"`
}

// Order List Item
type ListItem struct {
	// Cancel Status
	CancelStatus *int64 `json:"cancel_status,omitempty"`

	// Channel Id
	ChannelId *int64 `json:"channel_id,omitempty"`

	// Channel Name
	ChannelName *string `json:"channel_name,omitempty"`

	// Channel Options
	ChannelOptions *[]ChannelOption `json:"channel_options,omitempty"`

	// Channel Type
	ChannelType *ListItemChannelType `json:"channel_type,omitempty"`

	// Channel Type Name
	ChannelTypeName *string `json:"channel_type_name,omitempty"`

	// Created At
	CreatedAt *string `json:"created_at,omitempty"`

	// Delivery Cost
	DeliveryCost *float64 `json:"delivery_cost,omitempty"`

	// Hold Reasons
	HoldReasons *[]HoldReason `json:"hold_reasons,omitempty"`

	// Hold Status
	HoldStatus *bool `json:"hold_status,omitempty"`

	// Items
	Items *[]OrderItem `json:"items,omitempty"`

	// NSS Tracking Number
	NssTrackingNumber *string `json:"nss_tracking_number,omitempty"`

	// NSS Tracking URL
	NssTrackingTrackingUrl *string `json:"nss_tracking_tracking_url,omitempty"`

	// Order Number
	OrderNumber *string `json:"order_number,omitempty"`

	// Platform
	Platform *string `json:"platform,omitempty"`

	// Platform Order id
	PlatformOrderId *string `json:"platform_order_id,omitempty"`

	// Platform Order No
	PlatformOrderNo *string `json:"platform_order_no,omitempty"`

	// Ship Date
	ShipDate *string `json:"ship_date,omitempty"`

	// Order List Item Ship Info
	ShippingInfo *OrderListItemShipInfo `json:"shipping_info,omitempty"`

	// Status
	Status *int64 `json:"status,omitempty"`

	// Status Name
	StatusName *string `json:"status_name,omitempty"`

	// Store Id
	StoreId *int64 `json:"store_id,omitempty"`

	// Store Name
	StoreName *string `json:"store_name,omitempty"`

	// Warehouse Id
	WarehouseId *int64 `json:"warehouse_id,omitempty"`

	// Warehouse Name
	WarehouseName *string `json:"warehouse_name,omitempty"`
}

// Channel Type
type ListItemChannelType int

// MetaData describes the MetaData
type MetaData struct {
	// current
	Current int `json:"current"`

	// page_size
	PageSize int `json:"page_size"`

	// total
	Total int64 `json:"total"`
}

// OmsOrderItemCreateRequest defines model for OmsOrderItemCreateRequest.
type OmsOrderItemCreateRequest struct {
	// declared cn name
	DeclaredCnName string `json:"declared_cn_name"`

	// declared en name
	DeclaredEnName string `json:"declared_en_name"`

	// declared value in eur（€）
	DeclaredValueInEur float32 `json:"declared_value_in_eur"`

	// declared value in usd
	DeclaredValueInUsd float32 `json:"declared_value_in_usd"`

	// hs code
	HsCode string `json:"hs_code"`

	// Material
	Material *string `json:"material,omitempty"`

	// name
	Name string `json:"name"`

	// product id
	ProductId int64 `json:"product_id"`

	// Purpose
	Purpose *string `json:"purpose,omitempty"`

	// 产品数量
	Qty int64 `json:"qty"`

	// requires shipping
	RequiresShipping *bool `json:"requires_shipping,omitempty"`
}

// OmsOrderResponse defines model for OmsOrderResponse.
type OmsOrderResponse struct {
	// code
	Code int64            `json:"code"`
	Data *OmsOrderRspData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// OmsOrderRspData defines model for OmsOrderRspData.
type OmsOrderRspData struct {
	// order number
	OrderNumber string `json:"order_number"`
}

// OmsOutboundOrderUpdateRequest defines model for OmsOutboundOrderUpdateRequest.
type OmsOutboundOrderUpdateRequest struct {
	// Authorization
	Authorization *string `json:"Authorization,omitempty"`

	// customer tariff country code
	CustomerTariffCountryCode *string `json:"customer_tariff_country_code,omitempty"`

	// customer tariff number
	CustomerTariffNumber *string `json:"customer_tariff_number,omitempty"`

	// customer tariff number of type
	CustomerTariffNumberType *string `json:"customer_tariff_number_type,omitempty"`

	// offline
	Offline *bool `json:"offline,omitempty"`

	// outbound order number
	OrderNumber string `json:"order_number"`

	// Address
	ReceiverInfo *Address `json:"receiver_info,omitempty"`

	// remark
	Remark *string `json:"remark,omitempty"`

	// JWT used for authentication
	Token *string `json:"token,omitempty"`

	// warehouse id
	WarehouseId *int64 `json:"warehouse_id,omitempty"`
}

// OmsUpdateOutboundOrderRequestBody defines model for OmsUpdateOutboundOrderRequestBody.
type OmsUpdateOutboundOrderRequestBody struct {
	// customer tariff country code
	CustomerTariffCountryCode *string `json:"customer_tariff_country_code,omitempty"`

	// customer tariff number
	CustomerTariffNumber *string `json:"customer_tariff_number,omitempty"`

	// customer tariff number of type
	CustomerTariffNumberType *string `json:"customer_tariff_number_type,omitempty"`

	// offline
	Offline *bool `json:"offline,omitempty"`

	// Address
	ReceiverInfo *Address `json:"receiver_info,omitempty"`

	// remark
	Remark *string `json:"remark,omitempty"`

	// warehouse id
	WarehouseId *int64 `json:"warehouse_id,omitempty"`
}

// Order Counts
type OrderCountData struct {
	// All
	All *int64 `json:"all,omitempty"`

	// Cancelled
	Cancelled *int64 `json:"cancelled,omitempty"`

	// Hold
	Hold *int64 `json:"hold,omitempty"`

	// Pending
	Processing *int64 `json:"processing,omitempty"`

	// Ready To Ship
	Ready *int64 `json:"ready,omitempty"`

	// Shipped
	Shipped *int64 `json:"shipped,omitempty"`
}

// OrderCountResult defines model for OrderCountResult.
type OrderCountResult struct {
	// code
	Code int64 `json:"code"`

	// Order Counts
	Data *OrderCountData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// OrderData defines model for OrderData.
type OrderData struct {
	// channel id
	ChannelId *int64 `json:"channel_id,omitempty"`

	// channel name
	ChannelName *string `json:"channel_name,omitempty"`

	// created at
	CreatedAt string `json:"created_at"`

	// customer code
	CustomerCode *string `json:"customer_code,omitempty"`

	// customer order id
	CustomerOrderId string         `json:"customer_order_id"`
	FeeInfo         OrderFeeDetail `json:"fee_info"`

	// hold reason
	HoldReason *[]OrderHoldReason `json:"hold_reason,omitempty"`
	HoldStatus bool               `json:"hold_status"`

	// inbound order number
	InboundOrderNumber *string `json:"inbound_order_number,omitempty"`

	// items
	Items []OutboundOrderItem `json:"items"`

	// outbound order number
	OrderNumber string `json:"order_number"`

	// platform name
	Platform     string        `json:"platform"`
	PlatformInfo *PlatformInfo `json:"platform_info,omitempty"`

	// ShippingAddress describes the receiver address
	ReceiverInfo ShippingAddress `json:"receiver_info"`

	// remark
	Remark string `json:"remark"`

	// request shipping date
	RequestShippingAt string `json:"request_shipping_at"`

	// ship date
	ShipDate string `json:"ship_date"`

	// order status
	Status int64 `json:"status"`

	// status name
	StatusName string `json:"status_name"`

	// store id
	StoreId *int64 `json:"store_id,omitempty"`

	// channel name
	StoreName *string  `json:"store_name,omitempty"`
	TaxInfo   *TaxInfo `json:"tax_info,omitempty"`

	// tracking number
	TrackingNumber string `json:"tracking_number"`

	// tracking url
	TrackingUrl string `json:"tracking_url"`

	// warehouse id
	WarehouseId int64 `json:"warehouse_id"`

	// warehouse
	WarehouseName string `json:"warehouse_name"`
}

// OrderFeeDetail defines model for OrderFeeDetail.
type OrderFeeDetail struct {
	// Actual Weight(unit g)
	ActualWeight int64 `json:"actual_weight"`

	// Charge Weight (unit g)
	ChargeWeight int64 `json:"charge_weight"`

	// Currency
	Currency string `json:"currency"`

	// Fuel Fee
	FuelFee float64 `json:"fuel_fee"`

	// Shipping fee
	FulfillmentFee float64 `json:"fulfillment_fee"`

	// handling Fee
	HandlingFee float64 `json:"handling_fee"`

	// Misc Fee
	MiscFee float64 `json:"misc_fee"`

	// package Fee
	PackageFee float64 `json:"package_fee"`

	// Processing Fee
	ProcessingFee float64 `json:"processing_fee"`

	// Registration Fee
	RegistrationFee float64 `json:"registration_fee"`

	// Total Fee
	TotalPrice float64 `json:"total_price"`

	// VAT
	Vat float64 `json:"vat"`

	// Volume Weight(unit g)
	VolumeWeight int64 `json:"volume_weight"`
}

// OrderHoldReason defines model for OrderHoldReason.
type OrderHoldReason struct {
	// Code
	Code int32 `json:"code"`

	// en reason
	EnReason string `json:"en_reason"`

	// Product Id
	ProductId *int64 `json:"product_id,omitempty"`

	// reason
	Reason string `json:"reason"`

	// other
	Type string `json:"type"`
}

// OrderInfo describes the order info
type OrderInfo struct {
	// outbounds data
	List []OrderData `json:"list"`

	// MetaData describes the MetaData
	Meta MetaData `json:"meta"`
}

// List Order Item
type OrderItem struct {
	// Qty
	Qty *int64 `json:"qty,omitempty"`

	// SKU
	Sku *string `json:"sku,omitempty"`
}

// OrderListFilters defines model for OrderListFilters.
type OrderListFilters struct {
	// code
	Code int64 `json:"code"`

	// OrderListFiltersResultData
	Data *OrderListFiltersResultData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// OrderListFiltersResultData
type OrderListFiltersResultData struct {
	// List of user's countries
	CountryList *[]SelectOption `json:"country_list,omitempty"`

	// List of keywords types
	KeywordsTypeList *[]SelectOption `json:"keywords_type_list,omitempty"`

	// List of user's platforms
	PlatformList *[]PlatformOption `json:"platform_list,omitempty"`

	// List of user's stores
	StoreList *[]SelectOption `json:"store_list,omitempty"`

	// List of user's warehouses
	WarehouseList *[]SelectOption `json:"warehouse_list,omitempty"`
}

// Order List Item Ship Info
type OrderListItemShipInfo struct {
	// Shipping Country
	ShippingCountry *string `json:"shipping_country,omitempty"`

	// Shipping Name
	ShippingName *string `json:"shipping_name,omitempty"`

	// Shipping Phone
	ZipCode *string `json:"zip_code,omitempty"`
}

// OrderRsp defines model for OrderRsp.
type OrderRsp struct {
	// code
	Code int64 `json:"code"`

	// OrderInfo describes the order info
	Data *OrderInfo `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// OutboundOrderItem defines model for OutboundOrderItem.
type OutboundOrderItem struct {
	// declared cn name
	DeclaredCnName string `json:"declared_cn_name"`

	// declared en name
	DeclaredEnName string `json:"declared_en_name"`

	// declared value in eur（€）
	DeclaredValueInEur float32 `json:"declared_value_in_eur"`

	// declared value in usd
	DeclaredValueInUsd float32 `json:"declared_value_in_usd"`

	// Ext. order item id
	ExtOrderItemId *string `json:"ext_order_item_id,omitempty"`

	// Ext. product id
	ExtProductId *string `json:"ext_product_id,omitempty"`

	// hs code
	HsCode string `json:"hs_code"`

	// order item id
	Id *int64 `json:"id,omitempty"`

	// Material
	Material *string `json:"material,omitempty"`

	// platform product id
	PlatformProductId *int64 `json:"platform_product_id,omitempty"`

	// product attributes
	ProductAttributes []string `json:"product_attributes"`

	// 产品barcode
	ProductBarcode string `json:"product_barcode"`

	// product height
	ProductHeight int64 `json:"product_height"`

	// product length
	ProductLength int64 `json:"product_length"`

	// product name
	ProductName string `json:"product_name"`

	// product price
	ProductPrice float64 `json:"product_price"`

	// product SKU
	ProductSku string `json:"product_sku"`

	// product weight
	ProductWeight int64 `json:"product_weight"`

	// product width
	ProductWidth int64 `json:"product_width"`

	// Purpose
	Purpose *string `json:"purpose,omitempty"`

	// 产品数量
	Qty int64 `json:"qty"`

	// requires shipping
	RequiresShipping *bool `json:"requires_shipping,omitempty"`
}

// PlatformInfo defines model for PlatformInfo.
type PlatformInfo struct {
	// platform created at
	CreatedAt *string `json:"created_at,omitempty"`

	// platform fulfillment status
	FulfillmentStatus *string `json:"fulfillment_status,omitempty"`

	// platform order id
	OrderId *string `json:"order_id,omitempty"`

	// platform order no
	OrderNo *string `json:"order_no,omitempty"`

	// Paid status
	PaidStatus *string `json:"paid_status,omitempty"`

	// platform tags
	Tags *[]string `json:"tags,omitempty"`
}

// Select Options
type PlatformOption struct {
	// Label
	Label *string `json:"label,omitempty"`

	// Status
	Status *[]SelectOption `json:"status,omitempty"`

	// Value
	Value *string `json:"value,omitempty"`
}

// QueryOrderRsp defines model for QueryOrderRsp.
type QueryOrderRsp struct {
	// code
	Code int64      `json:"code"`
	Data *OrderData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// Select Options
type SelectOption struct {
	// Label
	Label *string `json:"label,omitempty"`

	// Value
	Value *string `json:"value,omitempty"`
}

// Internal Ship Order Request
type ShipOrderRequest struct {
	// Channel cost id
	ChannelCostId int64 `json:"channel_cost_id"`

	// Order Number
	OrderNumber string `json:"order_number"`
}

// ShippingAddress describes the receiver address
type ShippingAddress struct {
	// Address Line 1
	Address1 string `json:"address1"`

	// Address Line 2
	Address2 string `json:"address2"`

	// certificate code
	CertificateCode *string `json:"certificate_code,omitempty"`

	// certificate period
	CertificatePeriod *string `json:"certificate_period,omitempty"`

	// certificate type
	CertificateType *ShippingAddressCertificateType `json:"certificate_type,omitempty"`

	// City Name
	CityName string `json:"city_name"`

	// company
	Company *string `json:"company,omitempty"`

	// Country code
	CountryCode string `json:"country_code"`

	// Country Name
	CountryName string `json:"country_name"`

	// email
	Email *string `json:"email,omitempty"`

	// First name
	FirstName string `json:"first_name"`

	// Last name
	LastName string `json:"last_name"`

	// name
	Name *string `json:"name,omitempty"`

	// Phone number
	PhoneNumber string `json:"phone_number"`

	// State code
	StateCode string `json:"state_code"`

	// State Name
	StateName string `json:"state_name"`

	// ZIP code
	ZipCode string `json:"zip_code"`
}

// certificate type
type ShippingAddressCertificateType string

// ShippingOutboundOrderRequestBody defines model for ShippingOutboundOrderRequestBody.
type ShippingOutboundOrderRequestBody struct {
	Orders []ShipOrderRequest `json:"orders"`
}

// SingleOrderResponse defines model for SingleOrderResponse.
type SingleOrderResponse struct {
	// message
	Message string `json:"message"`

	// outbound order number
	OrderNumber string `json:"order_number"`

	// success
	Success bool `json:"success"`
}

// TaxInfo defines model for TaxInfo.
type TaxInfo struct {
	// Country code
	CustomerTariffCountryCode string `json:"customer_tariff_country_code"`

	// tax id
	CustomerTariffId *int64 `json:"customer_tariff_id,omitempty"`

	// Currency
	CustomerTariffNumber string `json:"customer_tariff_number"`

	// type
	CustomerTariffNumberType string `json:"customer_tariff_number_type"`
}

// UpdateOutboundOrderItemRequestBody defines model for UpdateOutboundOrderItemRequestBody.
type UpdateOutboundOrderItemRequestBody struct {
	// 产品barcode
	Barcode *string `json:"barcode,omitempty"`

	// customer code
	CustomerCode *string `json:"customer_code,omitempty"`

	// declared cn name
	DeclaredCnName *string `json:"declared_cn_name,omitempty"`

	// declared en name
	DeclaredEnName *string `json:"declared_en_name,omitempty"`

	// declared value in eur
	DeclaredValueInEur *float32 `json:"declared_value_in_eur,omitempty"`

	// declared value in usd
	DeclaredValueInUsd *float32 `json:"declared_value_in_usd,omitempty"`

	// ext order item id
	ExtOrderItemId *string `json:"ext_order_item_id,omitempty"`

	// ext order item id
	ExtProductId *string `json:"ext_product_id,omitempty"`

	// hs code
	HsCode *string `json:"hs_code,omitempty"`

	// images
	Images *[]string `json:"images,omitempty"`

	// material
	Material *string `json:"material,omitempty"`

	// order number
	OrderNumber *string `json:"order_number,omitempty"`

	// ext order item id
	PlatformProductId *int64 `json:"platform_product_id,omitempty"`

	// product attributes
	ProductAttributes *[]string `json:"product_attributes,omitempty"`

	// height
	ProductHeight *int64 `json:"product_height,omitempty"`

	// length
	ProductLength *int64 `json:"product_length,omitempty"`

	// product name
	ProductName *string `json:"product_name,omitempty"`

	// product price
	ProductPrice *float64 `json:"product_price,omitempty"`

	// product SKU
	ProductSku *string `json:"product_sku,omitempty"`

	// claim weight
	ProductWeight *int64 `json:"product_weight,omitempty"`

	// width
	ProductWidth *int64 `json:"product_width,omitempty"`

	// purpose
	Purpose *string `json:"purpose,omitempty"`

	// 产品数量
	Qty *int64 `json:"qty,omitempty"`

	// requires shipping
	RequiresShipping *bool `json:"requires_shipping,omitempty"`
}

// UpdateResponse defines model for UpdateResponse.
type UpdateResponse struct {
	// code
	Code int64 `json:"code"`

	// UpdateResponse describes update status
	Data *UpdateResponseData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// UpdateResponse describes update status
type UpdateResponseData struct {
	// status
	Status UpdateResponseDataStatus `json:"status"`
}

// status
type UpdateResponseDataStatus int

// UploadImageRequestBody defines model for UploadImageRequestBody.
type UploadImageRequestBody struct {
	// file
	File string `json:"file"`

	// file name
	FileName string `json:"file_name"`
}

// Upload Orders Data
type UploadOrdersData struct {
	// Fail Count
	FailCount *int64 `json:"fail_count,omitempty"`

	// Result File
	ResultFile *string `json:"result_file,omitempty"`

	// Success Count
	SuccessCount *int64 `json:"success_count,omitempty"`

	// Total Count
	TotalCount *int64 `json:"total_count,omitempty"`
}

// UploadOrdersResult defines model for UploadOrdersResult.
type UploadOrdersResult struct {
	// code
	Code int64 `json:"code"`

	// Upload Orders Data
	Data *UploadOrdersData `json:"data,omitempty"`

	// message
	Message string `json:"message"`
}

// OrderCreateOutboundOrderItemJSONBody defines parameters for OrderCreateOutboundOrderItem.
type OrderCreateOutboundOrderItemJSONBody CreateOutboundOrderItemRequestBody

// OrderUpdateOutboundOrderItemJSONBody defines parameters for OrderUpdateOutboundOrderItem.
type OrderUpdateOutboundOrderItemJSONBody UpdateOutboundOrderItemRequestBody

// OrderDeleteOutboundOrderJSONBody defines parameters for OrderDeleteOutboundOrder.
type OrderDeleteOutboundOrderJSONBody BackToReadyOutboundOrderRequestBody

// OrderBatchQueryOutboundOrder1Params defines parameters for OrderBatchQueryOutboundOrder1.
type OrderBatchQueryOutboundOrder1Params struct {
	// order number
	OrderNumbers *[]string `json:"order_numbers,omitempty"`

	// status
	Status *int `json:"status,omitempty"`

	// current
	Current *int `json:"current,omitempty"`

	// page_size
	PageSize *int `json:"page_size,omitempty"`
}

// OrderCreateOmsOutboundOrderJSONBody defines parameters for OrderCreateOmsOutboundOrder.
type OrderCreateOmsOutboundOrderJSONBody CreateOmsOutboundOrderRequestBody

// OrderBatchOmsUpdateOutboundOrderJSONBody defines parameters for OrderBatchOmsUpdateOutboundOrder.
type OrderBatchOmsUpdateOutboundOrderJSONBody BatchOmsUpdateOutboundOrderRequestBody

// OrderBackToReadyOutboundOrderJSONBody defines parameters for OrderBackToReadyOutboundOrder.
type OrderBackToReadyOutboundOrderJSONBody BackToReadyOutboundOrderRequestBody

// OrderCancelOutboundOrderJSONBody defines parameters for OrderCancelOutboundOrder.
type OrderCancelOutboundOrderJSONBody BackToReadyOutboundOrderRequestBody

// OrderGetOutboundOrderCountParams defines parameters for OrderGetOutboundOrderCount.
type OrderGetOutboundOrderCountParams struct {
	// Order No.
	OrderNumber *[]string `json:"order_number,omitempty"`

	// Platform Order No
	PlatformOrderNo *[]string `json:"platform_order_no,omitempty"`

	// Listing SKU
	ListingSku *[]string `json:"listing_sku,omitempty"`

	// SKU
	Sku *[]string `json:"sku,omitempty"`

	// NSS Tracking Number
	NssTrackingNumber *[]string `json:"nss_tracking_number,omitempty"`

	// Shipping Name
	ShippingName *string `json:"shipping_name,omitempty"`

	// Platform
	Platform *[]string `json:"platform,omitempty"`

	// Status Label
	StatusLabel *string `json:"status_label,omitempty"`

	// Store Id
	StoreId *[]string `json:"store_id,omitempty"`

	// Warehouse Id
	WarehouseId *[]string `json:"warehouse_id,omitempty"`

	// Country Code (二字码)
	CountryCode *[]string `json:"country_code,omitempty"`

	// Created Start Date
	CreatedAtStart *string `json:"created_at_start,omitempty"`

	// Created End Date
	CreatedAtEnd *string `json:"created_at_end,omitempty"`

	// Ship Start Date
	ShipDateStart *string `json:"ship_date_start,omitempty"`

	// Ship End Date
	ShipDateEnd *string `json:"ship_date_end,omitempty"`

	// Is Offline Order
	OfflineOrder *string `json:"offline_order,omitempty"`

	// Page
	Page *string `json:"page,omitempty"`

	// Page Size
	PageSize *string `json:"page_size,omitempty"`
}

// OrderExportOutboundOrdersParams defines parameters for OrderExportOutboundOrders.
type OrderExportOutboundOrdersParams struct {
	// Order No.
	OrderNumber *[]string `json:"order_number,omitempty"`

	// Platform Order No
	PlatformOrderNo *[]string `json:"platform_order_no,omitempty"`

	// Listing SKU
	ListingSku *[]string `json:"listing_sku,omitempty"`

	// SKU
	Sku *[]string `json:"sku,omitempty"`

	// NSS Tracking Number
	NssTrackingNumber *[]string `json:"nss_tracking_number,omitempty"`

	// Shipping Name
	ShippingName *string `json:"shipping_name,omitempty"`

	// Platform
	Platform *[]string `json:"platform,omitempty"`

	// Status Label
	StatusLabel *string `json:"status_label,omitempty"`

	// Store Id
	StoreId *[]string `json:"store_id,omitempty"`

	// Warehouse Id
	WarehouseId *[]string `json:"warehouse_id,omitempty"`

	// Country Code (二字码)
	CountryCode *[]string `json:"country_code,omitempty"`

	// Created Start Date
	CreatedAtStart *string `json:"created_at_start,omitempty"`

	// Created End Date
	CreatedAtEnd *string `json:"created_at_end,omitempty"`

	// Ship Start Date
	ShipDateStart *string `json:"ship_date_start,omitempty"`

	// Ship End Date
	ShipDateEnd *string `json:"ship_date_end,omitempty"`

	// Is Offline Order
	OfflineOrder *string `json:"offline_order,omitempty"`

	// Page
	Page *string `json:"page,omitempty"`

	// Page Size
	PageSize *string `json:"page_size,omitempty"`
}

// OrderGetOutboundOrderListParams defines parameters for OrderGetOutboundOrderList.
type OrderGetOutboundOrderListParams struct {
	// Order No.
	OrderNumber *[]string `json:"order_number,omitempty"`

	// Platform Order No
	PlatformOrderNo *[]string `json:"platform_order_no,omitempty"`

	// Listing SKU
	ListingSku *[]string `json:"listing_sku,omitempty"`

	// SKU
	Sku *[]string `json:"sku,omitempty"`

	// NSS Tracking Number
	NssTrackingNumber *[]string `json:"nss_tracking_number,omitempty"`

	// Shipping Name
	ShippingName *string `json:"shipping_name,omitempty"`

	// Platform
	Platform *[]string `json:"platform,omitempty"`

	// Status Label
	StatusLabel *string `json:"status_label,omitempty"`

	// Store Id
	StoreId *[]string `json:"store_id,omitempty"`

	// Warehouse Id
	WarehouseId *[]string `json:"warehouse_id,omitempty"`

	// Country Code (二字码)
	CountryCode *[]string `json:"country_code,omitempty"`

	// Created Start Date
	CreatedAtStart *string `json:"created_at_start,omitempty"`

	// Created End Date
	CreatedAtEnd *string `json:"created_at_end,omitempty"`

	// Ship Start Date
	ShipDateStart *string `json:"ship_date_start,omitempty"`

	// Ship End Date
	ShipDateEnd *string `json:"ship_date_end,omitempty"`

	// Is Offline Order
	OfflineOrder *string `json:"offline_order,omitempty"`

	// Page
	Page *string `json:"page,omitempty"`

	// Page Size
	PageSize *string `json:"page_size,omitempty"`
}

// OrderResubmitOutboundOrderJSONBody defines parameters for OrderResubmitOutboundOrder.
type OrderResubmitOutboundOrderJSONBody BackToReadyOutboundOrderRequestBody

// OrderShippingOutboundOrderJSONBody defines parameters for OrderShippingOutboundOrder.
type OrderShippingOutboundOrderJSONBody ShippingOutboundOrderRequestBody

// OrderOmsUpdateOutboundOrderJSONBody defines parameters for OrderOmsUpdateOutboundOrder.
type OrderOmsUpdateOutboundOrderJSONBody OmsUpdateOutboundOrderRequestBody

// OrderCreateOutboundOrderItemJSONRequestBody defines body for OrderCreateOutboundOrderItem for application/json ContentType.
type OrderCreateOutboundOrderItemJSONRequestBody OrderCreateOutboundOrderItemJSONBody

// OrderUpdateOutboundOrderItemJSONRequestBody defines body for OrderUpdateOutboundOrderItem for application/json ContentType.
type OrderUpdateOutboundOrderItemJSONRequestBody OrderUpdateOutboundOrderItemJSONBody

// OrderDeleteOutboundOrderJSONRequestBody defines body for OrderDeleteOutboundOrder for application/json ContentType.
type OrderDeleteOutboundOrderJSONRequestBody OrderDeleteOutboundOrderJSONBody

// OrderCreateOmsOutboundOrderJSONRequestBody defines body for OrderCreateOmsOutboundOrder for application/json ContentType.
type OrderCreateOmsOutboundOrderJSONRequestBody OrderCreateOmsOutboundOrderJSONBody

// OrderBatchOmsUpdateOutboundOrderJSONRequestBody defines body for OrderBatchOmsUpdateOutboundOrder for application/json ContentType.
type OrderBatchOmsUpdateOutboundOrderJSONRequestBody OrderBatchOmsUpdateOutboundOrderJSONBody

// OrderBackToReadyOutboundOrderJSONRequestBody defines body for OrderBackToReadyOutboundOrder for application/json ContentType.
type OrderBackToReadyOutboundOrderJSONRequestBody OrderBackToReadyOutboundOrderJSONBody

// OrderCancelOutboundOrderJSONRequestBody defines body for OrderCancelOutboundOrder for application/json ContentType.
type OrderCancelOutboundOrderJSONRequestBody OrderCancelOutboundOrderJSONBody

// OrderResubmitOutboundOrderJSONRequestBody defines body for OrderResubmitOutboundOrder for application/json ContentType.
type OrderResubmitOutboundOrderJSONRequestBody OrderResubmitOutboundOrderJSONBody

// OrderShippingOutboundOrderJSONRequestBody defines body for OrderShippingOutboundOrder for application/json ContentType.
type OrderShippingOutboundOrderJSONRequestBody OrderShippingOutboundOrderJSONBody

// OrderOmsUpdateOutboundOrderJSONRequestBody defines body for OrderOmsUpdateOutboundOrder for application/json ContentType.
type OrderOmsUpdateOutboundOrderJSONRequestBody OrderOmsUpdateOutboundOrderJSONBody
