// Package interfaces provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package interfaces

// Defines values for CreateProductRequestBodyBarcodeService.
const (
	CreateProductRequestBodyBarcodeServiceFalse CreateProductRequestBodyBarcodeService = false

	CreateProductRequestBodyBarcodeServiceTrue CreateProductRequestBodyBarcodeService = true
)

// Defines values for UpdateProductRequestBodyBarcodeService.
const (
	UpdateProductRequestBodyBarcodeServiceFalse UpdateProductRequestBodyBarcodeService = false

	UpdateProductRequestBodyBarcodeServiceTrue UpdateProductRequestBodyBarcodeService = true
)

// BaseResponse defines model for BaseResponse.
type BaseResponse struct {
	// code
	Code int64 `json:"code"`

	// message
	Message string `json:"message"`
}

// CreateProductRequestBody defines model for CreateProductRequestBody.
type CreateProductRequestBody struct {
	// Product Attribute(s)
	Attributes *[]string `json:"attributes,omitempty"`

	// Product Barcode
	Barcode *string `json:"barcode,omitempty"`

	// Barcode Service
	BarcodeService *CreateProductRequestBodyBarcodeService `json:"barcode_service,omitempty"`

	// Is it a brand (0=> No; 1=> Yes)
	Branded *float32 `json:"branded,omitempty"`

	// Product Level3 Category
	CatIdLevel2 *float32 `json:"cat_id_level2,omitempty"`

	// Declared chinese name
	DeclaredCnName *string `json:"declared_cn_name,omitempty"`

	// Declared english name
	DeclaredName *string `json:"declared_name,omitempty"`

	// Declared value in EUR
	DeclaredValueInEur *float32 `json:"declared_value_in_eur,omitempty"`

	// Declared value in USD
	DeclaredValueInUsd *float32 `json:"declared_value_in_usd,omitempty"`
	ExportCountry      *struct {
		// Export Country Code
		CountryCode *string `json:"country_code,omitempty"`

		// Export Declared value
		DeclaredValue *float32 `json:"declared_value,omitempty"`
	} `json:"export_country,omitempty"`

	// Product Weight(g)
	Grams *float32 `json:"grams,omitempty"`

	// Product Height(mm)
	Height *float32 `json:"height,omitempty"`

	// HS Code
	HsCode *string `json:"hs_code,omitempty"`

	// Product Image(s)
	Images        *[]string `json:"images,omitempty"`
	ImportCountry *struct {
		// Import Country Code
		CountryCode *string `json:"country_code,omitempty"`

		// Import Declared value
		DeclaredValue *float32 `json:"declared_value,omitempty"`
	} `json:"import_country,omitempty"`

	// Product Length(mm)
	Length *float32 `json:"length,omitempty"`

	// Product Material
	Material *string `json:"material,omitempty"`

	// Product name
	Name *string `json:"name,omitempty"`

	// Product Link
	ProductLink *string `json:"product_link,omitempty"`

	// Product Purpose
	Purpose *string `json:"purpose,omitempty"`

	// Product SKU
	Sku *string `json:"sku,omitempty"`

	// Type of Goods (0=> pack; 1=> letter)
	TypeOfGoods *float32 `json:"type_of_goods,omitempty"`

	// Product Width(mm)
	Width *float32 `json:"width,omitempty"`
}

// Barcode Service
type CreateProductRequestBodyBarcodeService bool

// UpdateProductRequestBody defines model for UpdateProductRequestBody.
type UpdateProductRequestBody struct {
	// Product Attribute(s)
	Attributes *[]string `json:"attributes,omitempty"`

	// Product Barcode
	Barcode *string `json:"barcode,omitempty"`

	// Barcode Service
	BarcodeService *UpdateProductRequestBodyBarcodeService `json:"barcode_service,omitempty"`

	// Is it a brand (0=> No; 1=> Yes)
	Branded *float32 `json:"branded,omitempty"`

	// Product Level3 Category
	CatIdLevel2 *float32 `json:"cat_id_level2,omitempty"`

	// Declared chinese name
	DeclaredCnName *string `json:"declared_cn_name,omitempty"`

	// Declared english name
	DeclaredName *string `json:"declared_name,omitempty"`

	// Declared value in EUR
	DeclaredValueInEur *float32 `json:"declared_value_in_eur,omitempty"`

	// Declared value in USD
	DeclaredValueInUsd *float32 `json:"declared_value_in_usd,omitempty"`
	ExportCountry      *struct {
		// Export Country Code
		CountryCode *string `json:"country_code,omitempty"`

		// Export Declared value
		DeclaredValue *float32 `json:"declared_value,omitempty"`
	} `json:"export_country,omitempty"`

	// Product Weight(g)
	Grams *float32 `json:"grams,omitempty"`

	// Product Height(mm)
	Height *float32 `json:"height,omitempty"`

	// HS Code
	HsCode *string `json:"hs_code,omitempty"`

	// Product Image(s)
	Images        *[]string `json:"images,omitempty"`
	ImportCountry *struct {
		// Import Country Code
		CountryCode *string `json:"country_code,omitempty"`

		// Import Declared value
		DeclaredValue *float32 `json:"declared_value,omitempty"`
	} `json:"import_country,omitempty"`

	// Product Length(mm)
	Length *float32 `json:"length,omitempty"`

	// Product Material
	Material *string `json:"material,omitempty"`

	// Product name
	Name *string `json:"name,omitempty"`

	// Product Link
	ProductLink *string `json:"product_link,omitempty"`

	// Product Purpose
	Purpose *string `json:"purpose,omitempty"`

	// Product SKU
	Sku *string `json:"sku,omitempty"`

	// Type of Goods (0=> pack; 1=> letter)
	TypeOfGoods *float32 `json:"type_of_goods,omitempty"`

	// Product Width(mm)
	Width *float32 `json:"width,omitempty"`
}

// Barcode Service
type UpdateProductRequestBodyBarcodeService bool

// CreateProductJSONBody defines parameters for CreateProduct.
type CreateProductJSONBody CreateProductRequestBody

// UpdateProductJSONBody defines parameters for UpdateProduct.
type UpdateProductJSONBody UpdateProductRequestBody

// CreateProductJSONRequestBody defines body for CreateProduct for application/json ContentType.
type CreateProductJSONRequestBody CreateProductJSONBody

// UpdateProductJSONRequestBody defines body for UpdateProduct for application/json ContentType.
type UpdateProductJSONRequestBody UpdateProductJSONBody
